<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.zte.sunquan.demo</groupId>
    <artifactId>hello-api</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>hello-api</name>
    <description>hello-api</description>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>
        <dependency>
            <groupId>com.zte.sdn.oscp</groupId>
            <artifactId>oscp-framework-commons</artifactId>
            <version>2.2.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.zte.sdn.oscp</groupId>
            <artifactId>oscp-store-persistence</artifactId>
            <version>2.2.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.onosproject</groupId>
            <artifactId>onos-yang-utils-generator</artifactId>
            <version>1.11</version>
        </dependency>
        <dependency>
            <groupId>org.onosproject</groupId>
            <artifactId>onos-yang-maven-plugin</artifactId>
            <version>1.11</version>
        </dependency>
        <dependency>
            <groupId>org.apache.karaf.features</groupId>
            <artifactId>framework</artifactId>
            <version>3.0.3</version>
            <type>kar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.karaf.features</groupId>
            <artifactId>standard</artifactId>
            <version>3.0.3</version>
            <classifier>features</classifier>
            <type>xml</type>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.karaf.features</groupId>
            <artifactId>spring</artifactId>
            <version>3.0.3</version>
            <classifier>features</classifier>
            <type>xml</type>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.karaf</groupId>
            <artifactId>org.apache.karaf.main</artifactId>
            <version>3.0.3</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.framework</artifactId>
            <version>1.8.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.eclipse.birt.runtime/org.eclipse.osgi -->
        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>org.eclipse.osgi</artifactId>
            <version>3.8.2.v20130124-134944</version>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.gogo.command</artifactId>
            <version>0.16.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.gogo.runtime</artifactId>
            <version>0.16.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.gogo.shell</artifactId>
            <version>0.12.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.scr</artifactId>
            <version>1.8.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.scr.annotations</artifactId>
            <version>1.9.12</version>
        </dependency>
        <dependency>
            <groupId>equinoxSDK381</groupId>
            <artifactId>org.eclipse.equinox.console</artifactId>
            <version>1.0.0.v20120522-1841</version>
        </dependency>
        <dependency>
            <groupId>equinoxSDK381</groupId>
            <artifactId>org.eclipse.equinox.ds</artifactId>
            <version>1.4.0.v20120522-1841</version>
        </dependency>
        <dependency>
            <groupId>equinoxSDK381</groupId>
            <artifactId>org.eclipse.equinox.launcher</artifactId>
            <version>1.3.0.v20120522-1813</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>

            <!--<plugin>-->
            <!--<groupId>org.onosproject</groupId>-->
            <!--<artifactId>onos-yang-maven-plugin</artifactId>-->
            <!--<version>1.11</version>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<configuration>-->
            <!--<classFileDir>src/main/java</classFileDir>-->
            <!--<yangFilesDir>src/main/resources</yangFilesDir>-->
            <!--<replacementForUnderscore>sq</replacementForUnderscore>-->
            <!--</configuration>-->
            <!--<goals>-->
            <!--<goal>yang2java</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->

            <!--</plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!--<plugin>-->
            <!--<groupId>org.apache.felix</groupId>-->
            <!--<artifactId>maven-bundle-plugin</artifactId>-->
            <!--<version>2.0.1</version>-->
            <!--<extensions>true</extensions>-->
            <!--<configuration>-->
            <!--<instructions>-->
            <!--<Bundle-ManifestVersion>2</Bundle-ManifestVersion>-->
            <!--<Bundle-Name>${project.description}</Bundle-Name>-->
            <!--<Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>-->
            <!--<Bundle-Version>${project.version}</Bundle-Version>-->
            <!--<Bundle-Vendor>${project.groupId}</Bundle-Vendor>-->
            <!--<Export-Package>com.zte.sunquan.demo.hello.*</Export-Package>-->
            <!--<Private-Package></Private-Package>-->
            <!--<Embed-Dependecy></Embed-Dependecy>-->
            <!--<Import-Package></Import-Package>-->
            <!--</instructions>-->
            <!--</configuration>-->
            <!--</plugin>-->

            <!--<plugin>-->
            <!--<groupId>org.codehaus.mojo</groupId>-->
            <!--<artifactId>appassembler-maven-plugin</artifactId>-->
            <!--<version>1.2.1</version>-->
            <!--<configuration>-->
            <!--&lt;!&ndash; 生成linux, windows两种平台的执行脚本 &ndash;&gt;-->
            <!--<platforms>-->
            <!--<platform>windows</platform>-->
            <!--<platform>unix</platform>-->
            <!--</platforms>-->
            <!--&lt;!&ndash; 根目录 &ndash;&gt;-->
            <!--<assembleDirectory>${project.build.directory}/mall</assembleDirectory>-->
            <!--&lt;!&ndash; 打包的jar，以及maven依赖的jar放到这个目录里面 &ndash;&gt;-->
            <!--<repositoryName>lib</repositoryName>-->
            <!--&lt;!&ndash; 可执行脚本的目录 &ndash;&gt;-->
            <!--<binFolder>bin</binFolder>-->
            <!--&lt;!&ndash; 配置文件的目标目录 &ndash;&gt;-->
            <!--<configurationDirectory>conf</configurationDirectory>-->
            <!--&lt;!&ndash; 拷贝配置文件到上面的目录中 &ndash;&gt;-->
            <!--<copyConfigurationDirectory>true</copyConfigurationDirectory>-->
            <!--&lt;!&ndash; 从哪里拷贝配置文件 (默认src/main/config) &ndash;&gt;-->
            <!--<configurationSourceDirectory>src/main/resources</configurationSourceDirectory>-->
            <!--&lt;!&ndash; lib目录中jar的存放规则，默认是${groupId}/${artifactId}的目录格式，flat表示直接把jar放到lib目录 &ndash;&gt;-->
            <!--<repositoryLayout>flat</repositoryLayout>-->
            <!--<encoding>UTF-8</encoding>-->
            <!--<logsDirectory>logs</logsDirectory>-->
            <!--<tempDirectory>tmp</tempDirectory>-->
            <!--<programs>-->
            <!--<program>-->
            <!--&lt;!&ndash; 启动类 &ndash;&gt;-->
            <!--<mainClass>com.zte.sunquan.demo.hello.Main</mainClass>-->
            <!--<jvmSettings>-->
            <!--<extraArguments>-->
            <!--<extraArgument>-server</extraArgument>-->
            <!--<extraArgument>-Xmx2G</extraArgument>-->
            <!--<extraArgument>-Xms2G</extraArgument>-->
            <!--</extraArguments>-->
            <!--</jvmSettings>-->
            <!--</program>-->
            <!--</programs>-->
            <!--</configuration>-->
            <!--</plugin>-->

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/assembly</outputDirectory>
                            <resources>
                                <resource>
                                    <!--<directory>E:/zzz</directory>-->
                                    <directory>src/main/resources</directory>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                    <id>copy-dependencies</id>
                    <phase>prepare-package</phase>
                    <goals>
                        <goal>copy-dependencies</goal>
                    </goals>
                    <configuration>
                        <outputDirectory>${project.build.directory}/assembly/lib</outputDirectory>
                        <copyPom>true</copyPom>
                    </configuration>
                    </execution>
                    <execution>
                        <id>copy</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <!-- here the phase you need -->
                        <phase>generate-resources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.karaf</groupId>
                                    <artifactId>org.apache.karaf.main</artifactId>
                                    <!--<version>${branding.version}</version>-->
                                    <outputDirectory>target/assembly/lib</outputDirectory>
                                    <!--<destFileName>karaf-branding-${branding.version}.jar</destFileName>-->
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.karaf</groupId>
                                    <artifactId>org.apache.karaf.main</artifactId>
                                    <!--<version>${branding.version}</version>-->
                                    <outputDirectory>target/assembly/lib</outputDirectory>
                                    <!--<destFileName>karaf-branding-${branding.version}.jar</destFileName>-->
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-artifacts</id>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>src/main/resources/etc/org.ops4j.pax.url.mvn.cfg</file>
                                    <type>properties</type>
                                    <classifier>config</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.karaf.tooling</groupId>
                <artifactId>karaf-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>process-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>archive</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <installedFeatures>
                        <feature>wrapper</feature>
                    </installedFeatures>
                    <bootFeatures>
                        <feature>framework</feature>
                        <feature>standard</feature>
                        <!--<feature>obr</feature>-->
                        <feature>region</feature>
                        <!--<feature>spring</feature>-->
                    </bootFeatures>
                    <featuresFile>${project.build.directory}/classes/feature/feature.xml</featuresFile>
                </configuration>
            </plugin>

            <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
            <execution>
            <goals>
            <goal>exec</goal>
            </goals>
            </execution>
            </executions>
            <configuration>
            <executable>java</executable>
            <workingDirectory>${project.basedir}/target/assembly</workingDirectory>
            <arguments>

            <argument>-classpath</argument>
                <argument>
                    ${project.basedir}/target/assembly/lib/*${path.separator}
                    ${project.basedir}/target/assembly/conf${path.separator}
                    ${project.basedir}/target/assembly/lib/karaf-jaas-boot.jar${path.separator}
                    ${project.basedir}/target/assembly/lib/karaf-jmx-boot.jar${path.separator}
                    ${project.basedir}/target/assembly/lib/karaf-org.osgi.core.jar${path.separator}
                    ${project.basedir}/target/assembly/lib/karaf.jar
                </argument>
            <argument>-Xmx512m</argument>
            <argument>-XX:MaxPermSize=512m</argument>

            <argument>-Dkaraf.startRemoteShell=true</argument>
            <argument>-Djava.net.preferIPv4Stack=true</argument>
            <argument>-Dderby.system.home=${project.basedir}/target/assembly/data/derby</argument>
            <argument>-Dderby.storage.fileSyncTransactionLog=true</argument>
            <argument>-Dcom.sun.management.jmxremote</argument>
            <argument>-Dkaraf.startLocalConsole=true</argument>
            <argument>-Djline.WindowsTerminal.directConsole=false</argument>
            <argument>-Dkaraf.home=${project.basedir}/target/assembly</argument>
            <argument>-Dkaraf.base=${project.basedir}/target/assembly</argument>
            <argument>-Dkaraf.etc=${project.basedir}/target/assembly/etc</argument>
            <argument>-Dkaraf.instances=${project.basedir}/target/assembly/instances</argument>
            <argument>-Djava.io.tmpdir=${project.basedir}/target/assembly/data/tmp</argument>
            <argument>-Djava.endorsed.dirs=${project.basedir}/target/assembly/lib/endorsed</argument>
            <argument>-Dkaraf.data=${project.basedir}/target/assembly/data</argument>
            <argument>-Djava.util.logging.config.file=${project.basedir}/target/assembly/etc/java.util.logging.properties</argument>

            <!-- Debug configuration -->
            <argument>-Xdebug</argument>
            <argument>-Djava.compiler=NONE</argument>
            <argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</argument>

            <argument>org.apache.karaf.main.Main</argument>
            </arguments>
            </configuration>
            </plugin>

        </plugins>
    </build>
</project>
